/* QUESTION 1. Create a query that lists each movie, the film category it is classified in,
and the number of times it has been rented out.*/

SELECT title movie_title, c.name movie_category, COUNT(rental_id) rental_count
FROM film_category fc
JOIN film f
ON f.film_id = fc.film_id
JOIN category c
ON fc.category_id = c.category_id
JOIN inventory i
ON i.film_id = f.film_id
JOIN rental r
ON r.inventory_id = i.inventory_id
GROUP BY 1,2
ORDER BY 3 DESC
LIMIT 10;

/* QUESTION 2. We would like to know who were our top 10 paying customers,
how many payments they made on a monthly basis during 2007,
and what was the amount of the monthly payments.*/

/*Top paying customers of ALL TIME*/
WITH top_ten AS (SELECT first_name ||' '|| last_name fullname, SUM(amount) total_paid
				 FROM customer c
				 JOIN payment p
				 ON c.customer_id = p.customer_id
				 GROUP BY 1
				 ORDER BY 2 DESC
				 LIMIT 10)

/* Monthly breakdown of payment from top ten customers,
with a tricky join to the subquery above*/
SELECT  DATE_TRUNC('month', payment_date) monthly, first_name ||' '|| last_name fullname, COUNT(amount)paidtimes_per_month, SUM(amount) monthly_payment
FROM customer c
JOIN payment p
ON c.customer_id = p.customer_id
JOIN top_ten
ON top_ten.fullname = c.first_name || ' '||c.last_name
WHERE DATE_TRUNC('year',payment_date) = '2007-01-01'
GROUP BY 1,2
ORDER BY 2;

/* QUESTION 3: Finally, for each of these top 10 paying customers,
I would like to find out the difference across their monthly payments during 2007.*/

/* First, we find the top paying customers of ALL TIME*/
WITH top_ten AS (SELECT first_name ||' '|| last_name customer_name, SUM(amount) total_paid
				 FROM customer c
				 JOIN payment p
				 ON c.customer_id = p.customer_id
				 GROUP BY 1
				 ORDER BY 2 DESC
				 LIMIT 10),

/* Next, we then find the monthly breakdown of payment from top ten customers,
with a tricky join to the subquery above*/
month_month AS (SELECT  DATE_TRUNC('month', payment_date) monthly, first_name ||' '|| last_name customer_name, COUNT(amount)patronage_per_month, SUM(amount) monthly_payment
				        FROM customer c
				        JOIN payment p
				        ON c.customer_id = p.customer_id
				        JOIN top_ten
				        ON top_ten.customer_name = c.first_name ||' '||c.last_name
				        WHERE DATE_TRUNC('year',payment_date) = '2007-01-01'
				        GROUP BY 1,2)

/* Then, we query to compare difference in payment across months
for top paying customers */
SELECT monthly, customer_name, monthly_payment,
	   monthly_payment - COALESCE((LAG(monthly_payment) OVER(PARTITION BY customer_name ORDER BY monthly)),0) month_pay_diff
FROM month_month
ORDER BY month_pay_diff DESC
LIMIT 10;

/* QUESTION 4. We want to find out how the two stores
compare in their count of rental orders during
every month for all the years we have data for.
Write a query that returns the store ID for the store,
the year and month and the number of rental orders each
store has fulfilled for that month. Your table should include
a column for each of the following: year, month, store ID and
count of rental orders fulfilled during that month.*/

SELECT DATE_TRUNC('month',rental_date)rent_date, store_id, COUNT(rental_id)rental_orders
FROM rental r
JOIN store s
ON s.manager_staff_id = r.staff_id
GROUP BY 1,2
ORDER BY 1;
